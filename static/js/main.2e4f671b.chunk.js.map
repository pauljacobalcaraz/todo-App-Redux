{"version":3,"sources":["Components/AddTaskForm.js","Components/TaskRow.js","App.js","reportWebVitals.js","redux/reducer.js","redux/store.js","index.js"],"names":["AddTaskForm","state","taskName","btnAddTask","props","addTask","name","status","className","Form","Control","size","type","placeholder","value","this","onChange","e","setState","target","onClick","React","Component","connect","dispatch","task","payload","TaskRow","btnDone","doneTask","id","markDoneTask","Button","variant","Badge","deleteTask","tasks","filter","map","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","v4","reducer","action","newTask","TaskCopy","push","filteredTasks","idDone","filteredTaskDone","store","createStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2e4f671b.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Form } from 'react-bootstrap';\r\nimport { connect } from 'react-redux';\r\n\r\nclass AddTaskForm extends React.Component {\r\n\tstate = {\r\n\t\ttaskName: '',\r\n\t};\r\n\tbtnAddTask = () => {\r\n\t\tthis.props.addTask({\r\n\t\t\tname: this.state.taskName,\r\n\t\t\tstatus: 'pending',\r\n\t\t});\r\n\t};\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className='d-flex justify-content-center mb-5'>\r\n\t\t\t\t<p>New Task:{'  '}</p>\r\n\t\t\t\t<Form.Control\r\n\t\t\t\t\tsize='sm'\r\n\t\t\t\t\ttype='text'\r\n\t\t\t\t\tclassName='col-3 m-1'\r\n\t\t\t\t\tplaceholder='New Task'\r\n\t\t\t\t\tvalue={this.state.taskName}\r\n\t\t\t\t\tonChange={(e) => this.setState({ taskName: e.target.value })}\r\n\t\t\t\t/>\r\n\t\t\t\t<br />\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<button className=' btn btn-primary p-1' onClick={this.btnAddTask}>\r\n\t\t\t\t\t\tSave\r\n\t\t\t\t\t</button>{' '}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n\treturn {\r\n\t\taddTask: (task) => dispatch({ type: 'ADD_TASK', payload: task }),\r\n\t};\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(AddTaskForm);\r\n","import React from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { Button, Badge } from 'react-bootstrap';\r\nimport { connect } from 'react-redux';\r\n\r\nclass TaskRow extends React.Component {\r\n\tbtnDone = () => {\r\n\t\tlet doneTask = {\r\n\t\t\tid: this.props.task.id,\r\n\t\t\tname: this.props.task.name,\r\n\t\t\tstatus: 'Done',\r\n\t\t};\r\n\t\tthis.props.markDoneTask(doneTask);\r\n\t};\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className='d-flex justify-content-center'>\r\n\t\t\t\t{/* \t{task.name}\r\n                {task.status} */}\r\n\t\t\t\t<Button variant='primary' className=' my-1'>\r\n\t\t\t\t\t{this.props.task.name}{' '}\r\n\t\t\t\t\t<Badge variant='light'>{this.props.task.status}</Badge>\r\n\t\t\t\t</Button>\r\n\t\t\t\t<div className='my-1'>\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\tvariant='danger'\r\n\t\t\t\t\t\tclassName='mx-1 p-1'\r\n\t\t\t\t\t\tonClick={() => this.props.deleteTask(this.props.task.id)}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t✗\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t\t{this.props.task.status === 'Pending' ? (\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\tvariant='success'\r\n\t\t\t\t\t\t\tclassName='mx-1 p-1'\r\n\t\t\t\t\t\t\tonClick={this.btnDone}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t✓\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\t''\r\n\t\t\t\t\t)}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n\treturn {\r\n\t\tdeleteTask: (id) => dispatch({ type: 'DELETE_TASK', payload: id }),\r\n\t\tmarkDoneTask: (doneTask) =>\r\n\t\t\tdispatch({ type: 'DONE_TASK', payload: doneTask }),\r\n\t};\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(TaskRow);\r\n","import './App.css';\nimport { connect } from 'react-redux';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport AddTaskForm from './Components/AddTaskForm';\nimport TaskRow from './Components/TaskRow';\n\nfunction App(props) {\n\treturn (\n\t\t<div className='App App-header'>\n\t\t\t<AddTaskForm />\n\t\t\t<header className='container d-flex '>\n\t\t\t\t<div className='col-6 App-header '>\n\t\t\t\t\tPending\n\t\t\t\t\t{/* <Tasks /> */}\n\t\t\t\t\t{props.tasks\n\t\t\t\t\t\t.filter((task) => task.status === 'Pending')\n\t\t\t\t\t\t.map((task) => (\n\t\t\t\t\t\t\t<TaskRow key={task.id} task={task} />\n\t\t\t\t\t\t))}\n\t\t\t\t</div>\n\t\t\t\t<div className='col-6 App-header'>\n\t\t\t\t\tDone\n\t\t\t\t\t{props.tasks\n\t\t\t\t\t\t.filter((task) => task.status === 'Done')\n\t\t\t\t\t\t.map((task) => (\n\t\t\t\t\t\t\t<TaskRow key={task.id} task={task} />\n\t\t\t\t\t\t))}\n\t\t\t\t</div>\n\t\t\t</header>\n\t\t</div>\n\t);\n}\nconst mapStateToProps = (state) => {\n\treturn {\n\t\ttasks: state.tasks,\n\t};\n};\n\nexport default connect(mapStateToProps)(App);\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { v4 } from 'uuid';\r\n\r\nconst initialState = {\r\n\ttasks: [\r\n\t\t{\r\n\t\t\tid: v4(),\r\n\t\t\tname: 'eat',\r\n\t\t\tstatus: 'Done',\r\n\t\t},\r\n\t\t{\r\n\t\t\tid: v4(),\r\n\t\t\tname: 'sleep',\r\n\t\t\tstatus: 'Pending',\r\n\t\t},\r\n\t\t{\r\n\t\t\tid: v4(),\r\n\t\t\tname: 'code',\r\n\t\t\tstatus: 'Pending',\r\n\t\t},\r\n\t],\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase 'ADD_TASK':\r\n\t\t\tlet newTask = action.payload;\r\n\t\t\tnewTask.id = v4();\r\n\t\t\tlet TaskCopy = [...state.tasks];\r\n\t\t\tTaskCopy.push(newTask);\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\ttasks: TaskCopy,\r\n\t\t\t};\r\n\t\tcase 'DELETE_TASK':\r\n\t\t\tconst id = action.payload;\r\n\t\t\tlet filteredTasks = state.tasks.filter((task) => task.id !== id);\r\n\t\t\treturn { ...state, tasks: filteredTasks };\r\n\r\n\t\tcase 'DONE_TASK':\r\n\t\t\t// alert(action.payload);\r\n\t\t\tconst idDone = action.payload;\r\n\t\t\tlet filteredTaskDone = state.tasks.filter(\r\n\t\t\t\t(task) => task.id !== idDone.id\r\n\t\t\t);\r\n\t\t\tfilteredTaskDone.push(idDone);\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\ttasks: filteredTaskDone,\r\n\t\t\t};\r\n\t\t// console.log(state);\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n\r\nexport default reducer;\r\n","import reducer from './reducer';\r\nimport { createStore } from 'redux';\r\n\r\nconst store = createStore(reducer);\r\n\r\nexport default store;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport store from './redux/store';\nimport { Provider } from 'react-redux';\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<Provider store={store}>\n\t\t\t<App />\n\t\t</Provider>\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}